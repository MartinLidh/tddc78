#!/bin/csh
#
set port = 5555  # default
set arch = ('' '' '' '' '' '' '' '' '' '' '' '')
set host = ('' '' '' '' '' '' '' '' '' '' '' '')
set pgm  = ('' '' '' '' '' '' '' '' '' '' '' '')
set numprocs = ('' '' '' '' '' '' '' '' '' '' '' '')
set repeat = ('' '' '' '' '' '' '' '' '' '' '' '')
set logname = ('' '' '' '' '' '' '' '' '' '' '' '')
set comm = ('' '' '' '' '' '' '' '' '' '' '' '')
set args = ('' '' '' '' '' '' '' '' '' '' '' '')
@ j = 1
@ line = 0
while ($j <= $#argv)
    set arg = "$argv[$j]"
    switch ("$arg")
      case -port=*:
        set port = `echo $arg | sed 's/-port=//'`
        breaksw
      case -arch=*:
        @ line += 1
        @ repeat[$line]	  = 1              # default
        @ numprocs[$line] = 1              # default
        set arch[$line] = `echo $arg | sed 's/-arch=//'`
        echo -arch not yet implemented
        breaksw
      case -host=*:
        @ line += 1
        @ repeat[$line]	  = 1              # default
        @ numprocs[$line] = 1              # default
        set host[$line] = `echo $arg | sed 's/-host=//'`
        breaksw
      case -pgm=*:
        set pgm[$line] = `echo $arg | sed 's/-pgm=//'`
        breaksw
      case -numprocs=*:
        set numprocs[$line] = `echo $arg | sed 's/-numprocs=//'`
        breaksw
      case -repeat=*:
        set repeat[$line] = `echo $arg | sed 's/-repeat=//'`
        breaksw
      case -logname=*:
        set logname[$line] = `echo $arg | sed 's/-logname=//'`
        breaksw
      case -comm=*:
        set comm[$line] = `echo $arg | sed 's/-comm=//'`
        breaksw
      case -args=*:
        set tempargs1 = "`echo $arg | sed 's/-args=//'`"
        set tempargs2 = "`echo $tempargs1 | sed 's/=/ /g'`"
        set args[$line] = "`echo $tempargs2 | sed 's/,/ /g'`"
        echo p4bldpg: args for line $line are: $args[$line]
        breaksw
      case *:
        echo invalid argument $arg  argument should be one of
        echo '-host=<host> -arch=<arch> numprocs repeat logname comm args'
    endsw
    @ j++
end

# For testing.
# set i = 1
# while ( $i <= $line )
#     if ($arch[$i] != '') then
#         echo -n arch=$arch[$i]
#     else
#         echo -n host=$host[$i]
#     endif
#     echo -n '' pgm=$pgm[$i] logname=$logname[$i] comm=$comm[$i]
#     echo '' numprocs=$numprocs[$i] repeat=$repeat[$i] args=$args[$i] 
#     @ i += 1
# end

# Test port.  This not completely safe but close enough for now.
#telnet $host[1] $port < /dev/null |& grep refused > /dev/null
#if ($status != 0) then
#    echo bad port $port, try another one
#    exit $status
#endif

# Count number of processes (nodes) to be started.  This includes
# multiple nodes on a single host, if requested.
@ numnodes = 0
@ i = 1
while ( $i <= $line )
    @ numnodes = $numnodes + $repeat[$i]
    @ i++
end

rm -f $pgm[1].pg
@ i = 1
while ( $i <= $line )
    @ j = 1   
    while ( $j <= $repeat[$i] )
	if ($i == 1) then
	    @ nprocs = $numprocs[$i] - 1
	else
	    @ nprocs = $numprocs[$i]
	endif
	set pgline = "$host[$i] $nprocs $pgm[$i] "
	echo $pgline >> $pgm[1].pg
        @ j++
    end   
    @ i++
end
