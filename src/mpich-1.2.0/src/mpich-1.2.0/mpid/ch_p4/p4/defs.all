# top level makefile for P4

#   BEGIN SUN
# P4 makefile for Sun
P4ARCH = SUN
AR = ar lruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS = 
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END SUN

#   BEGIN LINUX
# P4 makefile for LINUX
P4ARCH = LINUX
AR = ar ruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS = 
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END LINUX

#   BEGIN LINUX_ALPHA
# P4 makefile for LINUX_ALPHA
P4ARCH = LINUX_ALPHA
AR = ar ruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS = 
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END LINUX_ALPHA

#   BEGIN FREEBSD
# P4 makefile for FREEBSD
P4ARCH = FREEBSD
AR = ar lru
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS = 
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END FREEBSD

#   BEGIN SUN_SOLARIS
# P4 makefile for Sun
P4ARCH = SUN_SOLARIS
AR = ar ruv
FC = f77
#CC = /usr/ucb/cc 
#CLINKER = /usr/ucb/cc 
CLINKER = cc 
FLINKER = f77 
RANLIB = true
#MDEP_LIBS = /usr/ucblib/libucb.a -lsocket -lnsl  # for fortran
MDEP_LIBS = -lsocket -lnsl  -lthread # for fortran
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END SUN_SOLARIS

#   BEGIN HP
# P4 makefile for HP
P4ARCH = HP
AR = ar lruv
FC = f77
CLINKER = cc 
RANLIB = true
FLINKER = f77 
MDEP_LIBS = -lV3 -lU77
# -lV3 is for sighold, etc.
MDEP_CFLAGS = 
MDEP_FFLAGS = +U77
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END HP

#   BEGIN ALPHA
# P4 makefile for DEC ALPHA
P4ARCH = ALPHA
AR = ar ruv
FC = f77
CC = cc
CLINKER = cc
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS =
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END ALPHA

#   BEGIN DEC5000
# P4 makefile for DEC 5000
P4ARCH = DEC5000
AR = ar ruv
FC = f77
CC = cc
CLINKER = cc
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS =
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END DEC5000

#   BEGIN RS6000
# P4 makefile for IBM RS/6000
P4ARCH = RS6000
AR = ar lruv
FC = xlf
CLINKER = cc 
FLINKER = xlf
RANLIB = true
MDEP_LIBS = -lbsd
MDEP_CFLAGS = -D_ALL_SOURCE
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END RS6000

#   BEGIN SP1
# P4 makefile for IBM SP-1
P4ARCH = SP1
AR = ar ruv
FC = xlf
CLINKER = cc 
FLINKER = xlf -bnso -bI:/lib/syscalls.exp
RANLIB = true
MDEP_LIBS = -lbsd
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END SP1

#   BEGIN SP1_EUI
# P4 makefile for IBM SP-1 with EUI message-passing
P4ARCH = SP1_EUI
AR = ar ruv
FC = mpxlf
CC = mpcc
CLINKER = mpcc 
#FLINKER = mpxlf -bnso -bI:/lib/syscalls.exp
FLINKER = mpxlf 
RANLIB = true
MDEP_LIBS = 
MDEP_CFLAGS = -I/usr/lpp/poe/include
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END SP1_EUI

#   BEGIN SP1_EUIH
# P4 makefile for IBM SP-1 with EUI-H message-passing
P4ARCH = SP1_EUIH
AR = ar ruv
FC = xlf
CC = xlc
CLINKER = xlc -bimport:/usr/lpp/euih/eui/eui.exp -e main
FLINKER = xlf -bimport:/usr/lpp/euih/eui/eui.exp
RANLIB = true
MDEP_LIBS = 
MDEP_CFLAGS = -D_ALL_SOURCE
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END SP1_EUIH

#   BEGIN IBM3090
# P4 makefile for IBM 3090 running AIX
P4ARCH = IBM3090
AR = ar ruv
CLINKER = cc 
FLINKER = fvs 
FC = fvs
RANLIB = true
MDEP_LIBS =
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END IBM3090

#   BEGIN TITAN
# P4 makefile for Ardent Titan
P4ARCH = TITAN
AR = ar ruv
FC = fc
CLINKER = cc 
FLINKER = fc 
RANLIB = true
MDEP_LIBS =
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END TITAN

#   BEGIN SGI
# P4 makefile for Silicon Graphics workstations
P4ARCH = SGI
AR = ar ruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = true
MDEP_LIBS = -lsun
MDEP_CFLAGS = -cckr
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END SGI

#   BEGIN SGI_MP
# P4 makefile for Silicon Graphics multiprocessors, like Onyx
P4ARCH = SGI_MP
AR = ar ruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = true
MDEP_LIBS = -lsun
MDEP_CFLAGS = -cckr
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END SGI_MP

#   BEGIN SGI_CH
# P4 makefile for Silicon Graphics Challenge series
P4ARCH = SGI_CH
AR = ar ruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = true
MDEP_LIBS =
MDEP_CFLAGS = -cckr -64 -mips3 -non_shared -woff 1552,1174
MDEP_FFLAGS = -cckr -64 -mips3 -non_shared -woff 1552,1174 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END SGI_CH

#   BEGIN SGI_CH64
# P4 makefile for Silicon Graphics Challenge series, 64-bit
P4ARCH = SGI_CH64
AR = ar ruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = true
MDEP_LIBS =
MDEP_CFLAGS = -cckr -64 -mips4 -non_shared -woff 1552,1174
MDEP_FFLAGS = -cckr -64 -mips3 -non_shared -woff 1552,1174
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END SGI_CH64

#   BEGIN NEXT
# P4 makefile for NeXT
P4ARCH = NEXT
AR = ar ruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS =
MDEP_CFLAGS =                         # Black hardware, with NeXTstep
#MDEP_CFLAGS = -arch i386             # for 486's running NeXTstep
#MDEP_CFLAGS = -arch m68k -arch i386  # fat binaries, for both
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END NEXT

#   BEGIN KSR
# P4 makefile for Kendall Square
P4ARCH = KSR
AR = ar ruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = true
MDEP_LIBS = -lrpc
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END KSR

#   BEGIN FX8
# P4 makefile for Alliant FX/8
P4ARCH = FX8
AR = ar ruv
FC = fortran
CLINKER = cc 
FLINKER = fortran 
RANLIB = ranlib
MDEP_LIBS = 
MDEP_CFLAGS = -nc
MDEP_FFLAGS = -nc
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END FX8

#   BEGIN FX2800
# P4 makefile for Alliant FX/800 and FX/2800
P4ARCH = FX2800
AR = ar ruv
FC = fortran
CLINKER = cc 
FLINKER = fortran 
RANLIB = ranlib
MDEP_LIBS = -lalliant
MDEP_CFLAGS = -nc
MDEP_FFLAGS = -nc
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END FX2800

#   BEGIN FX2800_SWITCH
# P4 makefile for Alliant FX/800 and  Fx/2800 with HiPPI Switch
P4ARCH = FX2800_SWITCH
AR = ar ruv
FC = fortran
CLINKER = cc 
FLINKER = fortran 
RANLIB = ranlib
MDEP_LIBS = /usr/local/lib/libsw.a -lalliant
MDEP_CFLAGS = -nc -I/usr/local/include
MDEP_FFLAGS = -nc
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END FX2800_SWITCH

#   BEGIN DELTA
# P4 makefile for Intel DELTA
P4ARCH = DELTA
FILE_LINK = ln -s 
AR = ar860 r
FC = if77
CLINKER = icc 
FLINKER = if77 
RANLIB = true
MDEP_LIBS = -lsocknode 
MDEP_CFLAGS = -node -i860
MDEP_FFLAGS = -node -i860
P4_OBJ	= $(P4_COMM_OBJ) $(P4_SOCK_OBJ)
CC = icc
#   END DELTA

#   BEGIN PARAGON
# P4 makefile for Intel Paragon
P4ARCH = PARAGON
FILE_LINK = ln -s 
AR = ar860 r
FC = if77
CLINKER = icc 
FLINKER = if77 
RANLIB = true
MDEP_CFLAGS =  -nx
MDEP_FFLAGS =  -nx
P4_OBJ	= $(P4_COMM_OBJ)
CC = icc
#   END PARAGON

#   BEGIN IPSC860
# P4 makefile for Intel iPSC860 node with Portland Group Compilers
P4ARCH = IPSC860
FILE_LINK = ln -s 
AR = ar860 r
FC = if77
CLINKER = icc 
FLINKER = if77 
RANLIB = true
#MDEP_LIBS = -lnode
MDEP_CFLAGS = -O3 -Mvect -node
MDEP_FFLAGS = -O3 -Mvect -node
P4_OBJ	= $(P4_COMM_OBJ)
CC = icc
#   END IPSC860

#   BEGIN NCUBE
# P4 makefile for nCube nodes
P4ARCH = NCUBE
FILE_LINK = ln -s 
AR = nar r
FC = nf77
CLINKER = ncc 
FLINKER = nf77 
RANLIB = true
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ	= $(P4_COMM_OBJ)
CC = ncc
#   END NCUBE

#   BEGIN CM5
# P4 makefile for Thinking Machine's CM-5
P4ARCH = CM5
FILE_LINK = ln -s 
AR = ar ruv
FC = cmf
CLINKER = cmmd-ld -comp cc 
FLINKER = cmmd-ld -comp f77
RANLIB = ranlib
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ	= $(P4_COMM_OBJ)
CC = cc
#   END CM5

#   BEGIN IPSC860_SOCKETS
# P4 makefile for Intel iPSC860 node with sockets and Portland Group Compilers
P4ARCH = IPSC860_SOCKETS
FILE_LINK = ln -s 
AR = ar860 r
FC = if77
CLINKER = icc 
FLINKER = if77 
RANLIB = true
MDEP_LIBS = -lsocknode 
MDEP_CFLAGS = -O3 -Mvect -node
MDEP_FFLAGS = -O3 -Mvect -node
P4_OBJ	= $(P4_COMM_OBJ) $(P4_SOCK_OBJ)
CC = icc
#   END IPSC860_SOCKETS

#   BEGIN BALANCE
# P4 makefile for Sequent Balance
P4ARCH = BALANCE
FILE_LINK = ln 
FC = fortran
AR = ar ruv
CLINKER = cc 
FLINKER = fortran 
RANLIB = ranlib
MDEP_LIBS= -lpps -lseq
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ	= $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
P = &
#   END BALANCE

#   BEGIN SYMMETRY
# P4 makefile for Sequent Symmetry
P4ARCH = SYMMETRY
FILE_LINK = ln 
FC = fortran
AR = ar ruv
CLINKER = cc -Z1000000
FLINKER = fortran -Z1000000
RANLIB = ranlib
MDEP_LIBS= -lpps -lseq
MDEP_CFLAGS =
MDEP_FFLAGS =
P4_OBJ	= $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
P = &
#   END SYMMETRY

#   BEGIN SYMMETRY_PTX
#   P4 makefile for Sequent Symmetry PTX
#
# The '-Wc,-seq' option is needed to recognize
# variable types "shared" or "private", etc.
#
P4ARCH = SYMMETRY_PTX
FILE_LINK = ln
FC = fortran
AR = ar ruv
CLINKER = cc 
FLINKER = fortran 
RANLIB = true
MDEP_LIBS= -lpps -lseq -lrpc -lsocket -linet -lnsl
MDEP_CFLAGS = -Wc,-seq
P4_OBJ  = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
# P4_OBJ  = $(P4_COMM_OBJ) $(P4_SHMEM_OBJ)
P = &
#   END SYMMETRY_PTX

#   BEGIN MULTIMAX
# P4 makefile for Encore Multimax
P4ARCH = MULTIMAX
FILE_LINK = ln 
FC = f77
AR = ar ruv
CLINKER = cc 
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS= -lpp
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ	= $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END MULTIMAX

#   BEGIN CRAY
# P4 makefile for Cray
P4ARCH = CRAY
AR = ar ruv
CC = scc
FC = cf77
CLINKER = scc 
FLINKER = cf77 
RANLIB = true
MDEP_LIBS = -lrpc,net
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END CRAY

#   BEGIN GP_1000
# P4 makefile for BBN Butterfly GP-1000
P4ARCH = GP_1000
FILE_LINK = ln 
AR = ar ruv
FC = f77
CLINKER = cc 
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS= -lus
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
P = $(PARALLEL)
#   END GP_1000

#   BEGIN TC_2000
# P4 makefile for BBN Butterfly TC-2000
P4ARCH = TC_2000
FILE_LINK = ln 
FC = f77
AR = ar ruv
CLINKER = cc 
FLINKER = f77 
RANLIB = ranlib
MDEP_LIBS= -lus
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
P = $(PARALLEL)
#   END TC_2000

#   BEGIN TC_2000_TCMP
# P4 makefile for BBN Butterfly TC_2000 with TCMP message-passing library
P4ARCH = TC_2000_TCMP
FILE_LINK = ln 
FC = f77
AR = ar ruv
P = $(PARALLEL)
CLINKER = cc 
FLINKER = f77 
RANLIB = ranlib
#TCMP_LIBDIR = /Net/sparky/sparky1/lusk/lepido/tcmp
TCMP_LIBDIR = /usr/bbnm/tcmp
TCMPLIB = $(TCMP_LIBDIR)/libtcmpnew.a   # or see system administrator
MDEP_LIBS =  $(TCMPLIB) -lus
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END TC_2000_TCMP

#   BEGIN CONVEX
# P4 makefile for Convex 
P4ARCH = CONVEX
AR = ar ruv
FC = fc
CLINKER = cc 
FLINKER = fc 
RANLIB = ranlib
MDEP_LIBS =
MDEP_CFLAGS = 
MDEP_FFLAGS = 
P4_OBJ = $(P4_COMM_OBJ) $(P4_SOCK_OBJ) $(P4_SHMEM_OBJ)
#   END CONVEX

#   BEGIN MEIKO_CS2
# P4 makefile for MEIKO_CS2 node with Sun C compilers
# Pretend to be an IPSC so we use libmpsc
P4ARCH = MEIKO_CS2
FILE_LINK = ln -s 
AR = ar -crv
FC = f77
CLINKER = cc
FLINKER = f77 
RANLIB = true
MDEP_LIBS = -L/opt/MEIKOcs2/lib -lmpsc -lew -lelan -laio
MDEP_CFLAGS = -O
MDEP_FFLAGS = -O
P4_OBJ	= $(P4_COMM_OBJ)
CC = cc
#   END MEIKO_CS2

#   BEGIN COMMON

RM = /bin/rm

CFLAGS = -g -I$(INCLUDEDIR) $(MDEP_CFLAGS) $(USER_CFLAGS)
#CFLAGS = -O -I$(INCLUDEDIR) $(MDEP_CFLAGS) $(USER_CFLAGS)

FFLAGS = -g -I$(FORTLIBDIR) $(MDEP_FFLAGS)

.SUFFIXES:	.o .c .f .h

.c.o:$(P)
	$(CC) $(CFLAGS) -c $*.c 

.f.o:$(P)
	$(FC) $(FFLAGS) -c $*.f 

dummy:	default

clean:
	$(RM) -f *~ *.o *.bak tags TAGS core

#   END COMMON

