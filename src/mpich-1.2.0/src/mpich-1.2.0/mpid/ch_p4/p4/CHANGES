

			      Version 1.4 of p4

Changes from version 1.3 (including interim releases, 1.3a, 1.3b, 1.3c):
None of the new changes should affect existing programs, although some
of them may change the format of procgroup files.  See the new version of
the manual (included in this release in the doc subdirectory) for details
of what procgroup files should look like for various machines.

1)  Miscellaneous bugs fixed.

2)  New machines:  MEIKO_CS2, ALPHA, LINUX (PC's running the LINUX OS)

3)  Shared memory via mmap on SUN_SOLARIS.

4)  The beginnings of direct fiber channel support.  See the file "fiber"
    in the doc subdirectory.

5)  Server authentication.

6)  Non-local first entries in procgroup files, for use with special TCP/IP
    transport layers such as FDDI, HIPPI, and Fiber Channel.

7)  Updated manual, particularly to explain how to run and procgroup structure
    on various machines.

8)  Stderr now returned to master along with stdout.

9)  Better support for C++.


__________________________________________________________________________

			      Version 1.3 of p4

This is a list of changes from earlier versions of p4, particularly p4-1.2
and its variants (1.2a, 1.2b, 1.2c).  For the most part these changes are
minor and should not affect existing codes.  The main thing to look out for
is point 3) below.  

1)  All p4 options now start with "-p4".  For example, "-pg filename" should
    now be "-p4pg filename".  For a limited time only, the old versions of
    the command line arguments will be accepted anyway.

2)  When making p4, one now must say

         make P4ARCH=<machine>

    instead of

         make MACHINE=<machine>

    (Some new machines supported have a version of 'make' that reserves the
    word MACHINE.)

3)  The major change to this version of p4 may require a small change
    to user programs.  Because a number of users complained about the
    necessity of having a slave procedure even when it was unused, we
    have eliminated the requirement.  However, this caused us to
    slightly alter the interface, and thus may require some users to
    make small alterations to the start-up procedures in their
    programs.  The change is explained in detail (by example) below.
    For further examples, see the programs in the messages subdirectory,
    e.g. sr_test.c (SPMD) and sr_master.c / sr_slave.c (non-SPMD).


    For programs supporting the Single-Program-Multiple-Data (SPMD) 
    model, i.e. programs in which all processes execute the same program:

    Old Version                         New Version
    ------------------------------      ------------------------------

    #include "p4.h                      #include "p4.h"
	
    main(argc,argv)                     main(argc,argv)
    int argc;                           int argc;
    char **argv;                        char **argv;
    {                                   {
	p4_initenv(&argc,argv);             p4_initenv(&argc,argv);
	if (p4_get_my_id() == 0)            p4_create_procgroup();
	{                                   if (p4_get_my_id() == 0)
	    p4_create_procgroup();          {
	    master();                           master();
	}                                   }
	else                                else
	{                                   {
	    slave();                            slave();
	    exit(0);                            exit(0);
	}                                   }
	p4_wait_for_end();                  p4_wait_for_end();
    }                                    }


    
    Note that programs in which the master process executes one program
    and the remote slave processes execute some other program, the code
    for the master proces is essentially the same as that pictured
    above, except that if the programmer knows that a local slave
    process will never be "forked", then the call to slave can be
    eliminated.  Also, in this model, the programmer used to code the
    makefile such that the slave program would link with p4_cmain.
    This is no longer supported because p4_cmain explicitly invoked a
    procedure named "slave".  Instead, the user must now supply a small
    main procedure to invoke the slave procedure (which no longer has
    to be named slave).  An example main is given below (also, see
    slave_main.c in the messages directory).


    Separate Slave Main Procedure
    ------------------------------
    #include "p4.h"
    #include "sr_user.h"

    main(argc, argv)
    int argc;
    char **argv;
    {
	p4_initenv(&argc, argv);
	/*****
        if (p4_am_i_cluster_master())
	    p4_dprintf("I am the cluster master\n");
	*****/
	slave();
	p4_wait_for_end();
    }

4)  A number of new machines are supported, including the Intel Paragon, the
    TMC CM-5, the nCube, and various message-passing options on the IBM SP-1,
    including TCP to the switch, EUI, and EUI-H.  For a complete list of
    supported machines, see the file 'machines' in the 'util' directory.

5)  There is an additional default procgroup file name, composed of the
    executable file name with the suffix ".pg".

6)  The -p4norem command line option allows you to start remote processes
    under a debugger.

7)  A number of bug fixes and performance enhancements have been made,
    particularly for the IBM RS/6000 and SP-1.

8)  The manual has been extensively improved, largely in response to users'
    suggestions, and contains more information on compiling and running p4
    applications on specific machines.
