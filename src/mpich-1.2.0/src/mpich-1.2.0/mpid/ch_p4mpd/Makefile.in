#
#  $Id: Makefile.in,v 1.13 1999/11/28 23:01:24 gropp Exp $
#
#  (C) 1993,1995 by Argonne National Laboratory and Mississipi State University.
#      All rights reserved.  See COPYRIGHT in top-level directory.
#
# Eventually, there will be two sets of routines
#
#
##### User configurable options #####

CC          = @CC@
AR          = @AR@
RANLIB      = @RANLIB@
OPTFLAGS    = @OPTFLAGS@
SHELL       = /bin/sh
ASMFILES_O  = @ASMFILES_O@
prefix      = @prefix@
top_srcdir  = @top_srcdir@
srcdir      = @srcdir@
libbuild_dir = @libbuild_dir@
DEFS        = @DEFS@ -I. -I${srcdir} @mpich_includes@ -DHAVE_MPICH_MPID_H \
		-DMPID_DEVICE_CODE @GETNAME_DEFS@ @DEVCFLAGS@ @DEV_DEFS@

@VPATH@

#ALL: default
ALL: libdev

P4_HOME  = ./p4mpd
LIBNAME  = ${libbuild_dir}/lib@MPILIBNAME@.a
LIBDEV   = libmpid.a
# You need the ../ch_p4mpd for some broken compilers (versions of gcc)
# that make all of these paths relative to the directory an include is
# found in, not the directory where the compiler is running (!)
# Trailing / causes problems for some versions of gcc (was -I./)
#CFLAGS   = @CFLAGS@ $(OPTFLAGS) @OPTFLAGSC@ \
#	-I../.. -I../../include -I. -I../ch2 -I../ch_p4mpd \
#		-I../util -Ip4mpd/include \
#		-DMPID_DEVICE_CODE @GETNAME_DEFS@ @DEVCFLAGS@ @DEV_DEFS@
CFLAGS   = @CFLAGS@ -I${top_srcdir}/mpid/ch2 -I${srcdir} -I${top_srcdir}/mpid/util -Ip4mpd -Ip4mpd/include

# See mpid/ch_adi2/Makefile.in for a full list
SOURCE   = adi2recv.c adi2send.c adi2init.c adi2probe.c adi2ssend.c \
	   adi2hsend.c adi2hrecv.c adi2pack.c adi2mpack.c \
	   adi2hssend.c bswap2.c adi2req.c adi2cancel.c \
	   chbeager.c chbrndv.c chdebug.c chchkdev.c chshort.c chflow.c \
	   chinit.c chnodename.c chhetero.c chtick.c p4mpdpriv.c \
	   queue.c cmnargs.c mprerr.c tr2.c sbcnst2.c objtrace.c \
	   chpackflow.c calltrace.c chcancel.c connect.c @DEVCFILES@
SOURCEC  = $(SOURCE)
SOURCEF  =
MPI_OBJECTS = adi2recv.o adi2send.o adi2init.o adi2probe.o adi2ssend.o \
	      adi2hsend.o adi2hrecv.o adi2pack.o adi2mpack.o \
	      adi2hssend.o bswap2.o adi2req.o adi2cancel.o \
	      chbeager.o chbrndv.o chdebug.o chchkdev.o chshort.o chflow.o \
	      chinit.o chnodename.o chhetero.o chtick.o p4mpdpriv.o \
	      $(ASMFILES_O) queue.o cmnargs.o tr2.o sbcnst2.o \
	      chpackflow.o objtrace.o calltrace.o chcancel.o connect.o @DEVOFILES@

default: $(LIBNAME)
libdev: $(LIBDEV)

# Removed mpid.h because that file exists in ch2 and is not in srcdir
$(MPI_OBJECTS): ${srcdir}/chdef.h

# default_all is the same as default, but without the RANLIB.  This
# can speed up the build (ranlibs can take a LONG time).  profile_all 
# is the same, but for the profile library
default_all: setlinks p4inmpi default_all_files
default_all_files: $(MPI_OBJECTS)
	$(AR) $(LIBNAME) $?
profile_all: 

clean:
	rm -f *~ $(MPI_OBJECTS) libmpid.a mprerr.o
	rm -f ${srcdir}/*.o
	(cd $(P4_HOME); if [ -s Makefile ] ; then $(MAKE) clean; \
	rm -f lib/libp4.a ; fi ) 
#	rm -f Makefile lib/p4_config.h lib/libp4.a ; fi ;)

distclean: 
	@for file in $(SOURCE) ; do \
	    if [ $$file != p4mpdpriv.c ] ; then \
	        if [ -h $$file ] ; then \
	            /bin/rm -f $$file ; fi ; \
	    fi \
	done
	@for file in $(MPIDHEADERS) ; do \
	    if [ -h $$file ] ; then \
	        /bin/rm -f $$file ; fi ; \
	done
	@if [ -h mpiddev.h ] ; then \
	    /bin/rm -f mpiddev.h ; fi
	@if [ -h sbcnst2.h ] ; then \
	    /bin/rm -f sbcnst2.h ; fi
	/bin/rm -f Makefile
	(cd ../mpd; ${MAKE} distclean )

MPIDHEADERS = mpid.h req.h comm.h datatype.h chhetero.h attach.h objtrace.h \
	      calltrace.h cookie.h mpid_bind.h reqalloc.h tr2.h mpimem.h \
              chpackflow.h		
setlinks:
	@for file in $(SOURCE) ; do  \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/ch2/$$file ] ; then \
	 	ln -s ${top_srcdir}/mpid/ch2/$$file $$file ; fi ; \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/util/$$file ] ; then \
		ln -s ${top_srcdir}/mpid/util/$$file $$file ; fi ; \
	done
	@for file in $(MPIDHEADERS) ; do \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/ch2/$$file ] ; then \
		ln -s ${top_srcdir}/mpid/ch2/$$file $$file ; \
	    elif [ ! -s $$file -a -s ${top_srcdir}/mpid/util/$$file ] ; then \
		ln -s ${top_srcdir}/mpid/util/$$file $$file ; fi ; \
	done
	@if [ ! -s mpiddev.h ] ; then \
	    ln -s ${top_srcdir}/mpid/ch2/mpiddevbase.h mpiddev.h ; fi
	@if [ ! -s sbcnst2.h ] ; then \
	    ln -s ${top_srcdir}/mpid/util/sbcnst2.h sbcnst2.h ; fi

# This is not the right test.  See setlinks
#	if [ ! -s ${srcdir}/$*.c ] ; then \
#	    ln -s ${top_srcdir}/mpid/ch2/$*.c $*.c ; fi
.c.o:
	$(CC) $(DEFS) $(CFLAGS) $(BASEOPT) -c $< $(MPI_PROFILE)

.o.s:
	$(CC) $(CFLAGS) $(BASEOPT) -c -S $< $(MPI_PROFILE)

$(LIBNAME): $(MPI_OBJECTS) 
	$(AR) $@ $?
	$(RANLIB) $@

libmpid.a: $(MPI_OBJECTS) mprerr.o
	$(AR) $@ $?
	$(RANLIB) $@

configure: configure.in
	autoheader --localdir=../..
	autoconf   --localdir=../..

p4inmpi:
	(cd $(P4_HOME); \
	$(MAKE) p4inmpi MPIARCH=@ARCH@ MPILIBNAME=@MPILIBNAME@)


