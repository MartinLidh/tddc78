# Generated automatically from Makefile_nompi.in by configure.
#  (C) 1993 by Argonne National Laboratory and Mississipi State University.
#      All rights reserved.  See COPYRIGHT in top-level directory.
#

##### User configurable options #####

MPI_HOME   = @MPI_HOME@
# We must use mpicc since some defines (like -D_ALL_SOURCE for AIX) are
# included there and not in the "USER_FLAGS".  We should clean this up
# at some point....
CC          = /home/TDDB78/src/mpich-1.2.0/lib/../bin/mpicc
CLINKER     = $(CC)
F77         = /home/TDDB78/src/mpich-1.2.0/lib/../bin/mpif77
AR          = ar cr
RANLIB      = ranlib
INCLUDE_DIR =  -I/home/TDDB78/src/mpich-1.2.0/lib/../include -I/home/TDDB78/src/mpich-1.2.0/include -I${srcdir} -I.
OPTFLAGS    = 
MPE_GRAPH   = -DMPE_GRAPHICS
LIB_PATH    = -L/home/TDDB78/src/mpich-1.2.0/lib -lX11 
LIB_DIR     = /home/TDDB78/src/mpich-1.2.0/lib

MPEGRAPHICS_SOURCE = mpe_graphics.c xcolor.c xframe.c xinit.c xwmap.c xmouse.c
MPEGRAPHICS_OBJS   = mpe_graphics.o xcolor.o xframe.o xinit.o xwmap.o xmouse.o
MPEGRAPHICS_FSOURCE = mpe_graphicsf.c
MPEGRAPHICS_FOBJS   = mpe_graphicsf.o
### End User configurable options ###

SHELL = /bin/sh
VPATH=.:$(srcdir)
prefix       = /home/TDDB78/mpich-1.2.0/
exec_prefix  = ${prefix}
top_srcdir   = /home/TDDB78/src/mpich-1.2.0/mpe
srcdir       = /home/TDDB78/src/mpich-1.2.0/mpe
libbuild_dir = /home/TDDB78/src/mpich-1.2.0/lib
binbuild_dir = /home/TDDB78/src/mpich-1.2.0/lib/../bin


CFLAGS =  -DMPI_solaris -DFORTRANUNDERSCORE -DUSE_STDARG -DHAVE_PROTOTYPES $(MPE_GRAPH) $(OPTFLAGS) $(INCLUDE_DIR) 

MPE_CSOURCES = $(MPEGRAPHICS_SOURCE) mpe_log.c decomp.c \
	       mpe_seq.c mpehname.c
MPE_TSOURCES = $(MPEGRAPHICS_SOURCE) decomp.c mpe_seq.c dbxerr.c
MPE_COBJECTS = $(MPEGRAPHICS_OBJS) mpe_log.o decomp.o mpe_seq.o \
		dbxerr.o mpehname.o
MPE_WSOURCES = $(MPEGRAPHICS_FSOURCE) mpe_logf.c decompf.c mpe_seqf.c
MPE_WOBJECTS = $(MPEGRAPHICS_FOBJS) mpe_logf.o decompf.o mpe_seqf.o

MPE_SOURCES = $(MPE_CSOURCES) $(MPE_WSOURCES)
MPE_OBJECTS = $(MPE_COBJECTS) $(MPE_WOBJECTS)

#
# It is tempting here to use ... libmpe.a($(MPE_OBJECTS)) as the dependency,
# but this would require that all makes properly handle library dependencies.
# Since makes that DO are the exception rather than the rule, we don't
# use this form
${libbuild_dir}/libmpe_nompi.a: $(MPEGRAPHICS_OBJS) mpehname.o
	$(AR) $@ $?
	$(RANLIB) $@

clean: $(MPEGRAPHICS_OBJS) mpehname.o
	-/bin/rm -f $?

.c.o:
	$(CC) $(CFLAGS) -DMPE_NOMPI -c $<

.c.a:
	$(CC) $(CFLAGS) -DMPE_NOMPI -c $<
