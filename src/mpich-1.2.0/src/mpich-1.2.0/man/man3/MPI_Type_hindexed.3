.TH MPI_Type_hindexed 3 "8/30/1999" " " "MPI"
.SH NAME
MPI_Type_hindexed \-  Creates an indexed datatype with offsets in bytes 
.SH SYNOPSIS
.nf
#include "mpi.h"
int MPI_Type_hindexed( 
 int count, 
 int blocklens[], 
 MPI_Aint indices[], 
 MPI_Datatype old_type, 
 MPI_Datatype *newtype )
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B count 
- number of blocks -- also number of entries in indices and blocklens
.PD 1
.PD 0
.TP
.B blocklens 
- number of elements in each block (array of nonnegative integers) 
.PD 1
.PD 0
.TP
.B indices 
- byte displacement of each block (array of MPI_Aint) 
.PD 1
.PD 0
.TP
.B old_type 
- old datatype (handle) 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B newtype 
- new datatype (handle) 
.PD 1

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

Also see the discussion for MPI_Type_indexed about the 
.I indices
in Fortran.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Errhandler_set
; the predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_TYPE 
- Invalid datatype argument.  May be an uncommitted 
MPI_Datatype (see 
.I MPI_Type_commit
).
.PD 1
.PD 0
.TP
.B MPI_ERR_COUNT 
- Invalid count argument.  Count arguments must be 
non-negative; a count of zero is often valid.
.PD 1
.PD 0
.TP
.B MPI_ERR_INTERN 
- This error is returned when some part of the MPICH 
implementation is unable to acquire memory.  
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class (e.g., 
.I MPI_ERR_RANK
).
.PD 1
.SH LOCATION
type_hind.c
