.TH Constants 3 "12/10/1997" " " "MPI"
.SH NAME
Constants \-  Meaning of MPI
.I s defined constants 
.SH DATA TYPES
Note that the Fortran types should only be used in Fortran programs,
and the C types should only be used in C programs.  For example,
it is in error to use 
MPI_INT
.I  for a Fortran INTEGER.
Datatypes are of type 
MPI_Datatype
.I  in C and of tyep 
INTEGER
.I  in Fortran.

.SH C DATATYPES
.PD 0
.TP
.B MPI_CHAR 
- char
.PD 1
.PD 0
.TP
.B MPI_BYTE 
- See standard; like unsigned char
.PD 1
.PD 0
.TP
.B MPI_SHORT 
- short
.PD 1
.PD 0
.TP
.B MPI_INT   
- int
.PD 1
.PD 0
.TP
.B MPI_LONG 
- long
.PD 1
.PD 0
.TP
.B MPI_FLOAT 
- float
.PD 1
.PD 0
.TP
.B MPI_DOUBLE 
- double
.PD 1
.PD 0
.TP
.B MPI_UNSIGNED_CHAR 
- unsigned char
.PD 1
.PD 0
.TP
.B MPI_UNSIGNED_SHORT 
- unsigned short
.PD 1
.PD 0
.TP
.B MPI_UNSIGNED 
- unsigned int
.PD 1
.PD 0
.TP
.B MPI_UNSIGNED_LONG 
- unsigned long
.PD 1
.PD 0
.TP
.B MPI_LONG_DOUBLE  
- long double (some systems may not implement)
.PD 1

The following are datatypes for the MPI functions 
MPI_MAXLOC
.I  and
MPI_MINLOC
.I .
.PD 0
.TP
.B MPI_FLOAT_INT 
- 
struct { float, int }
.I 
.PD 1
.PD 0
.TP
.B MPI_LONG_INT  
- 
struct { long, int }
.I 
.PD 1
.PD 0
.TP
.B MPI_DOUBLE_INT 
- 
struct { double, int }
.I 
.PD 1
.PD 0
.TP
.B MPI_SHORT_INT  
- 
struct { short, int }
.I 
.PD 1
.PD 0
.TP
.B MPI_2INT       
- 
struct { int, int }
.I 
.PD 1
.PD 0
.TP
.B MPI_LONG_DOUBLE_INT 
- 
struct { long double, int }; this 
is an OPTIONAL type, and may be set to NULL 
.PD 1
.PD 0
.TP
.B MPI_LONG_LONG_INT 
- struct { long long, int }; this is an OPTIONAL type,
and may be set to NULL. 
.PD 1

Special datatypes for C and Fortran
.PD 0
.TP
.B MPI_PACKED 
- For 
.I MPI_Pack
and 
.I MPI_Unpack
.PD 1
.PD 0
.TP
.B MPI_UB 
- For 
.I MPI_Type_struct
; an upper-bound indicator 
.PD 1
.PD 0
.TP
.B MPI_LB 
- For 
.I MPI_Type_struct
; a lower-bound indicator 
.PD 1

.SH FORTRAN DATATYPES
.PD 0
.TP
.B MPI_REAL 
- 
.I REAL
.PD 1
.PD 0
.TP
.B MPI_INTEGER 
- 
.I INTEGER
.PD 1
.PD 0
.TP
.B MPI_LOGICAL 
- 
.I LOGICAL
.PD 1
.PD 0
.TP
.B MPI_DOUBLE_PRECISION 
- 
.I DOUBLE PRECISION
.PD 1
.PD 0
.TP
.B MPI_COMPLEX 
- 
.I COMPLEX
.PD 1
.PD 0
.TP
.B MPI_DOUBLE_COMPLEX 
- 
.I complex*16
(or 
.I complex*32
) where supported.
.PD 1

The following datatypes are optional
.PD 0
.TP
.B MPI_INTEGER1 
- 
.I integer*1
if supported
.PD 1
.PD 0
.TP
.B MPI_INTEGER2 
- 
.I integer*2
if supported
.PD 1
.PD 0
.TP
.B MPI_INTEGER4 
- 
.I integer*4
if supported
.PD 1
.PD 0
.TP
.B MPI_REAL4    
- 
.I real*4
if supported
.PD 1
.PD 0
.TP
.B MPI_REAL8    
- 
.I real*8
if supported
.PD 1

The following are datatypes for the MPI functions 
.I MPI_MAXLOC
and
.I MPI_MINLOC
.  In Fortran, these datatype always consist of
two elements of the same Fortran type.
.PD 0
.TP
.B MPI_2INTEGER 
- 
.I INTEGER,INTEGER
.PD 1
.PD 0
.TP
.B MPI_2REAL    
- 
.I REAL, REAL
.PD 1
.PD 0
.TP
.B MPI_2DOUBLE_PRECISION 
- 
.I DOUBLE PRECISION, DOUBLE PRECISION
.PD 1
.PD 0
.TP
.B MPI_2COMPLEX 
- 
.I COMPLEX, COMPLEX
.PD 1
.PD 0
.TP
.B MPI_2DOUBLE_COMPLEX 
- 
.I complex*16, complex*16
.PD 1

.SH COMMUNICATORS
Communicators are of type 
.I MPI_Comm
in C and 
.I INTEGER
in Fortran
.PD 0
.TP
.B MPI_COMM_WORLD 
- Contains all of the processes
.PD 1
.PD 0
.TP
.B MPI_COMM_SELF 
- Contains only the calling process
.PD 1

.SH GROUPS
Groups are of type 
.I MPI_Group
in C and 
.I INTEGER
in Fortran

.PD 0
.TP
.B MPI_GROUP_EMPTY 
- A group containing no members.
.PD 1

.SH RESULTS OF THE COMPARE OPERATIONS
.PD 0
.TP
.B MPI_IDENT 
- Identical
.PD 1
.PD 0
.TP
.B MPI_CONGRUENT  
- (only for 
.I MPI_COMM_COMPARE
) The groups are identical
.PD 1
.PD 0
.TP
.B MPI_SIMILAR 
- Same members, but in a different order
.PD 1
.PD 0
.TP
.B MPI_UNEQUAL 
- Different
.PD 1


.SH COLLECTIVE OPERATIONS
The collective combination operations (
.I MPI_REDUCE
, 
.I MPI_ALLREDUCE
,
.I MPI_REDUCE_SCATTER
, and 
.I MPI_SCAN
) take a combination operation.
This operation is of type 
.I MPI_Op
in C and of type 
.I INTEGER
in Fortran.
The predefined operations are

.PD 0
.TP
.B MPI_MAX 
- return the maximum
.PD 1
.PD 0
.TP
.B MPI_MIN 
- return the minumum
.PD 1
.PD 0
.TP
.B MPI_SUM 
- return the sum
.PD 1
.PD 0
.TP
.B MPI_PROD 
- return the product
.PD 1
.PD 0
.TP
.B MPI_LAND 
- return the logical and
.PD 1
.PD 0
.TP
.B MPI_BAND 
- return the bitwise and
.PD 1
.PD 0
.TP
.B MPI_LOR 
- return the logical or
.PD 1
.PD 0
.TP
.B MPI_BOR 
- return the bitwise of
.PD 1
.PD 0
.TP
.B MPI_LXOR 
- return the logical exclusive or
.PD 1
.PD 0
.TP
.B MPI_BXOR 
- return the bitwise exclusive or
.PD 1
.PD 0
.TP
.B MPI_MINLOC 
- return the minimum and the location (actually, the value of
the second element of the structure where the minimum of
the first is found)
.PD 1
.PD 0
.TP
.B MPI_MAXLOC 
- return the maximum and the location
.PD 1

.SH NOTES ON COLLECTIVE OPERATIONS

The reduction functions (
.I MPI_Op
) do not return an error value.  As a result,
if the functions detect an error, all they can do is either call 
.I MPI_Abort
or silently skip the problem.  Thus, if you change the error handler from
.I MPI_ERRORS_ARE_FATAL
to something else, for example, 
.I MPI_ERRORS_RETURN
,
then no error may be indicated.

The reason for this is the performance problems in ensuring that
all collective routines return the same error value.

Note that not all datatypes are valid for these functions.  For example,
.I MPI_COMPLEX
is not valid for 
.I MPI_MAX
and 
.I MPI_MIN
.  In addition, the MPI
1.1 standard did not include the C types 
.I MPI_CHAR
and 
.I MPI_UNSIGNED_CHAR
among the lists of arithmetic types for operations like 
.I MPI_SUM
.  However,
since the C type 
.I char
is an integer type (like 
.I short
), it should have been
included.  The MPI Forum will probably include 
.I char
and 
.I unsigned char
as a clarification to MPI 1.1; until then, users are advised that MPI
implementations may not accept 
.I MPI_CHAR
and 
.I MPI_UNSIGNED_CHAR
as valid
datatypes for 
.I MPI_SUM
, 
.I MPI_PROD
, etc.  MPICH does allow these datatypes.

.SH PERMANENT KEY VALUES
These are the same in C and Fortran

.PD 0
.TP
.B MPI_TAG_UB 
- Largest tag value
.PD 1
.PD 0
.TP
.B MPI_HOST 
- Rank of process that is host, if any
.PD 1
.PD 0
.TP
.B MPI_IO 
- Rank of process that can do I/O
.PD 1
.PD 0
.TP
.B MPI_WTIME_IS_GLOBAL 
- Has value 1 if 
.I MPI_WTIME
is globally synchronized.
.PD 1

.SH NULL OBJECTS
.PD 0
.TP
.B MPI_COMM_NULL   
- Null communicator
.PD 1
.PD 0
.TP
.B MPI_OP_NULL     
- Null operation
.PD 1
.PD 0
.TP
.B MPI_GROUP_NULL     
- Null group
.PD 1
.PD 0
.TP
.B MPI_DATATYPE_NULL  
- Null datatype
.PD 1
.PD 0
.TP
.B MPI_REQUEST_NULL   
- Null request
.PD 1
.PD 0
.TP
.B MPI_ERRHANDLER_NULL 
- Null error handler
.PD 1

.SH PREDEFINED CONSTANTS
.PD 0
.TP
.B MPI_MAX_PROCESSOR_NAME 
- Maximum length of name returned by
.I MPI_GET_PROCESSOR_NAME
.PD 1
.PD 0
.TP
.B MPI_MAX_ERROR_STRING   
- Maximum length of string return by
.I MPI_ERROR_STRING
.PD 1
.PD 0
.TP
.B MPI_UNDEFINED  
- Used by many routines to indicated undefined or unknown
integer value
.PD 1
.PD 0
.TP
.B MPI_UNDEFINED_RANK 
- Unknown rank
.PD 1
.PD 0
.TP
.B MPI_KEYVAL_INVALID 
- Special keyval that may be used to detect uninitialized
keyvals. 
.PD 1
.PD 0
.TP
.B MPI_BSEND_OVERHEAD 
- Add this to the size of a 
.I MPI_BSEND
buffer for each
outstanding message
.PD 1
.PD 0
.TP
.B MPI_PROC_NULL  
- This rank may be used to send or receive from no-one.
.PD 1
.PD 0
.TP
.B MPI_ANY_SOURCE 
- In a receive, accept a message from anyone.
.PD 1
.PD 0
.TP
.B MPI_ANY_TAG	 
- In a receive, accept a message with any tag value.
.PD 1
.PD 0
.TP
.B MPI_BOTTOM     
- May be used to indicate the bottom of the address space
.PD 1

.SH TOPOLOGY TYPES
.PD 0
.TP
.B MPI_GRAPH  
- General graph
.PD 1
.PD 0
.TP
.B MPI_CART   
- Cartesian grid
.PD 1


.SH MPI STATUS
The 
.I MPI_Status
datatype is a structure.  The three elements for use
by programmers are
.PD 0
.TP
.B MPI_SOURCE 
- Who sent the message
.PD 1
.PD 0
.TP
.B MPI_TAG 
- What tag the message was sent with
.PD 1
.PD 0
.TP
.B MPI_ERROR 
- Any error return 
.PD 1

.SH SPECIAL MPI TYPES AND FUNCTIONS

.PD 0
.TP
.B MPI_Aint 
- C type that holds any valid address. 
.PD 1
.PD 0
.TP
.B MPI_Handler_function 
- C function for handling errors (see
.I MPI_Errhandler_create
) .
.PD 1
.PD 0
.TP
.B MPI_User_function 
- C function to combine values (see collective operations
and 
.I MPI_Op_create
)
.PD 1
.PD 0
.TP
.B MPI_Copy_function 
- Function to copy attributes (see 
.I MPI_Keyval_create
)
.PD 1
.PD 0
.TP
.B MPI_NULL_COPY_FN 
- Predefined copy function
.PD 1
.PD 0
.TP
.B MPI_Delete_function 
- Function to delete attributes (see 
.I MPI_Keyval_create
)
.PD 1
.PD 0
.TP
.B MPI_NULL_DELETE_FN 
- Predefined delete function 
.PD 1
.PD 0
.TP
.B MPI_DUP_FN 
- Predefined duplication function
.PD 1
.PD 0
.TP
.B MPI_ERRORS_ARE_FATAL 
- Error handler that forces exit on error
.PD 1
.PD 0
.TP
.B MPI_ERRORS_RETURN 
- Error handler that returns error codes (as value of
MPI routine in C and through last argument in Fortran)
.PD 1

.SH MPI ERROR CLASSES
.PD 0
.TP
.B MPI_SUCCESS               
- Successful return code 
.PD 1
.PD 0
.TP
.B MPI_ERR_BUFFER            
- Invalid buffer pointer 
.PD 1
.PD 0
.TP
.B MPI_ERR_COUNT             
- Invalid count argument 
.PD 1
.PD 0
.TP
.B MPI_ERR_TYPE              
- Invalid datatype argument 
.PD 1
.PD 0
.TP
.B MPI_ERR_TAG               
- Invalid tag argument 
.PD 1
.PD 0
.TP
.B MPI_ERR_COMM              
- Invalid communicator 
.PD 1
.PD 0
.TP
.B MPI_ERR_RANK              
- Invalid rank 
.PD 1
.PD 0
.TP
.B MPI_ERR_ROOT              
- Invalid root 
.PD 1
.PD 0
.TP
.B MPI_ERR_GROUP             
- Null group passed to function 
.PD 1
.PD 0
.TP
.B MPI_ERR_OP                
- Invalid operation 
.PD 1
.PD 0
.TP
.B MPI_ERR_TOPOLOGY          
- Invalid topology 
.PD 1
.PD 0
.TP
.B MPI_ERR_DIMS              
- Illegal dimension argument 
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG               
- Invalid argument 
.PD 1
.PD 0
.TP
.B MPI_ERR_UNKNOWN           
- Unknown error 
.PD 1
.PD 0
.TP
.B MPI_ERR_TRUNCATE          
- message truncated on receive 
.PD 1
.PD 0
.TP
.B MPI_ERR_OTHER             
- Other error; use Error_string 
.PD 1
.PD 0
.TP
.B MPI_ERR_INTERN            
- internal error code    
.PD 1
.PD 0
.TP
.B MPI_ERR_IN_STATUS         
- Look in status for error value 
.PD 1
.PD 0
.TP
.B MPI_ERR_PENDING           
- Pending request
.PD 1
.PD 0
.TP
.B MPI_ERR_REQUEST           
- illegal mpi_request handle 
.PD 1
.PD 0
.TP
.B MPI_ERR_LASTCODE          
- Last error code -- always at end 
.PD 1


.SH LOCATION
/home/MPI/mansrc/mpiconsts.txt
