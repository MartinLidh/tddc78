.TH MPI_Intercomm_create 3 "10/18/1999" " " "MPI"
.SH NAME
MPI_Intercomm_create \-  Creates an intercommuncator from two intracommunicators 
.SH SYNOPSIS
.nf
#include "mpi.h"
int MPI_Intercomm_create ( MPI_Comm local_comm, int local_leader, 
      MPI_Comm peer_comm, int remote_leader, int tag, 
      MPI_Comm *comm_out )
.fi
.SH INPUT PARAMTERS
.PD 0
.TP
.B local_comm 
- Local (intra)communicator
.PD 1
.PD 0
.TP
.B local_leader 
- Rank in local_comm of leader (often 0)
.PD 1
.PD 0
.TP
.B peer_comm 
- Remote communicator
.PD 1
.PD 0
.TP
.B remote_leader 
- Rank in peer_comm of remote leader (often 0)
.PD 1
.PD 0
.TP
.B tag 
- Message tag to use in constructing intercommunicator; if multiple
.I MPI_Intercomm_creates
are being made, they should use different tags (more
precisely, ensure that the local and remote leaders are using different
tags for each 
.I MPI_intercomm_create
).
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B comm_out 
- Created intercommunicator
.PD 1

.SH NOTES
The MPI 1.1 Standard contains two mutually exclusive comments on the
input intracommunicators.  One says that their repective groups must be
disjoint; the other that the leaders can be the same process.  After
some discussion by the MPI Forum, it has been decided that the groups must
be disjoint.  Note that the 
.B reason
given for this in the standard is
.B not
the reason for this choice; rather, the 
.B other
operations on
intercommunicators (like 
.I MPI_Intercomm_merge
) do not make sense if the
groups are not disjoint.

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH ALGORITHM
.PD 0
.TP
.B 1) Allocate a send context, an inter
- coll context, and an intra-coll context
.PD 1
.PD 0
.TP
.B 2) Send "send_context" and lrank_to_grank list from local comm group 
- if I'm the local_leader.
.PD 1
.PD 0
.TP
.B 3) If I'm the local leader, then wait on the posted sends and receives
- to complete.  Post the receive for the remote group information and
wait for it to complete.
.PD 1
.PD 0
.TP
.B 4) Broadcast information received from the remote leader.  
- . 5) Create the inter_communicator from the information we now have.
.PD 1
.PD 0
.TP
.B An inter
- communicator ends up with three levels of communicators. 
The inter-communicator returned to the user, a "collective" 
inter-communicator that can be used for safe communications between
local & remote groups, and a collective intra-communicator that can 
be used to allocate new contexts during the merge and dup operations.
.PD 1

For the resulting inter-communicator, 
.I comm_out


.nf
comm_out                       = inter-communicator
comm_out->comm_coll            = "collective" inter-communicator
comm_out->comm_coll->comm_coll = safe collective intra-communicator
.fi


.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Errhandler_set
; the predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_COMM 
- Invalid communicator.  A common error is to use a null
communicator in a call (not even allowed in 
.I MPI_Comm_rank
).
.PD 1
.PD 0
.TP
.B MPI_ERR_TAG 
- Invalid tag argument.  Tags must be non-negative; tags
in a receive (
.I MPI_Recv
, 
.I MPI_Irecv
, 
.I MPI_Sendrecv
, etc.) may
also be 
.I MPI_ANY_TAG
.  The largest tag value is available through the 
the attribute 
.I MPI_TAG_UB
.
.PD 1
.PD 0
.TP
.B MPI_ERR_INTERN 
- This error is returned when some part of the MPICH 
implementation is unable to acquire memory.  
.PD 1
.PD 0
.TP
.B MPI_ERR_RANK 
- Invalid source or destination rank.  Ranks must be between
zero and the size of the communicator minus one; ranks in a receive
(
.I MPI_Recv
, 
.I MPI_Irecv
, 
.I MPI_Sendrecv
, etc.) may also be 
.I MPI_ANY_SOURCE
.
.PD 1

.SH SEE ALSO
MPI_Intercomm_merge, MPI_Comm_free, MPI_Comm_remote_group, 
.br
MPI_Comm_remote_size
.SH LOCATION
ic_create.c
