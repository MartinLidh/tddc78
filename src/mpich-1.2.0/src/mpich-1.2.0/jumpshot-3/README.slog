
Building Jumpshot
-------- --------

In order to run this code, one must have Java 1.1.6 or above.

In the GUI directory, we have the following subdirectories:

bin/  contains the actual jumpshot wrapper, and jumpshot's setup files
      and jumpshot.jar + slog.jar.

doc/  contains original jumpshot for CLOG documentation.

logfiles/  contains the sample AIX slogfiles generated by Eric Wu

old/  contains original jumpshot for CLOG stuff( Ignore it )

src/  contains the actual JAVA code for the GUI

swing/ contains the swing library needed to build Jumpshot.


   ---- In order to build Jumpshot, we need to build three jar files.
        The simplest way is to cd to directory GUI.  Update GUI_HOME
        and SLOG_HOME in file GUI/Make.conf."OSname" to reflect where
        these 2 directories are located. And type make.  On SGI, one
        might need to do a gmake.  If everything goes well, there
        should be 3 jar files generated in GUI/bin.  Check if
        slog_api.jar, preview.jar and jumpshot.jar in GUI/bin are all
        updated.

        If things do NOT go well.  One may need to build individual
        jar files separately.  One is the SLOG-API's java interface
        and actual GUI codes.  slog_api/src-java/slog.jar which are
        built from sources in slog_api/src-java,  GUI/bin/preview.jar
        which are built from sources in GUI/src/GraphicPreview, and
        GUI/bin/jumpshot.jar which are built from sources in GUI/src/main.
        So one needs to cd to the slog_api/src-java and build slog.jar
        by typing "make".  one may need to to set all the JAVA related
        environmental variable(s) so javac and jar are defined in your
        PATH before typing make.  slog.jar does NOT depend on Swing.
        Once slog.jar is built, one can proceed to build jumpshot.jar
        by cd'ing to the top level directory GUI ( i.e. cd ../../GUI ).
        Edit Make.conf."OSname" to define JAVA_HOME where JAVA resides.

        On AIX, JAVA_HOME should be set to point to /usr/jdk_base.
        Also be sure the "java -fullversion" return a build data later
        than or equal to
        "JDK 1.1.6 IBM build a116-19990115 (JIT enabled: jitc)"

        Note: ignore the warning messages during compilation of
        jumpshot.jar.


Running Jumpshot
------- --------

There are 2 ways to run jumpshot.

1, using the supplied script in GUI/bin:
   If you have followed the instruction to build the 2 jar files,
   cd to GUI/bin and run Jumpshot by entering "jumpshot" or
   "jumpshot slog_filename", e.g.

   /homes/chan/jumpshot/GUI/bin> jumpshot ../logfiles/merge.slog

   With a filename as the command line argument, jumpshot skips the 
   logfile selection process and starts reading the file immediately.

2, run jumpshot directly using "java"
   Set the CLASSPATH in your local shell to where slog.jar, jumpshot.jar
   and swing.jar, GraphicPlotter.jar and UTEStatsViewer.jar are located.
   And you can invoke the jumpshot as "java jumpshot" or
   "java jumpshot slog_filename".


Using Jumpshot
----- --------

The documentation available on how to use timeline window in Jumpshot
is in the Jumpshot paper.  It is in color postscript.  You can get a 
copy of the file at
ftp://ftp.mcs.anl.gov/pub/mpi/misc/jumpshot-paper.ps.gz

Current Limitations
------- -----------

Currently there is only one frame directory and frames are about 128K
each.  It is easy to change the number of frames per directory.  We plan
to experiment to find out what is the right size for a frame 
(larger => slower display) and soon to provide an unbounded linked list 
of frame directories.

The number of time lines for the same view isn't a const across different
frames.  

The bebits of the interval are NOT processed/joined in jumpshot at this time.

The disk IO is very slow in jumpshot when reading in a new frame
and the various window are NOT updated during this time.  Adding
a separate thread to handle the disk IO should improve the performance.


 
