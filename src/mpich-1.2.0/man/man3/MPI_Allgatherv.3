.TH MPI_Allgatherv 3 "10/15/1999" " " "MPI"
.SH NAME
MPI_Allgatherv \-  Gathers data from all tasks and deliver it to all 
.SH SYNOPSIS
.nf
#include "mpi.h"
int MPI_Allgatherv ( void *sendbuf, int sendcount, MPI_Datatype sendtype, 
                     void *recvbuf, int *recvcounts, int *displs, 
       MPI_Datatype recvtype, MPI_Comm comm )
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B sendbuf 
- starting address of send buffer (choice) 
.PD 1
.PD 0
.TP
.B sendcount 
- number of elements in send buffer (integer) 
.PD 1
.PD 0
.TP
.B sendtype 
- data type of send buffer elements (handle) 
.PD 1
.PD 0
.TP
.B recvcounts 
- integer array (of length group size) 
containing the number of elements that are received from each process 
.PD 1
.PD 0
.TP
.B displs 
- integer array (of length group size). Entry 
.I i
specifies the displacement (relative to recvbuf ) at
which to place the incoming data from process  
.I i
.PD 1
.PD 0
.TP
.B recvtype 
- data type of receive buffer elements (handle) 
.PD 1
.PD 0
.TP
.B comm 
- communicator (handle) 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B recvbuf 
- address of receive buffer (choice) 
.PD 1

.SH NOTES
The MPI standard (1.0 and 1.1) says that

The jth block of data sent from
each proess is received by every process and placed in the jth block of the
buffer 
.I recvbuf
.

This is misleading; a better description is

The block of data sent from the jth process is received by every
process and placed in the jth block of the buffer 
.I recvbuf
.

This text was suggested by Rajeev Thakur.

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Errhandler_set
; the predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error.

.PD 0
.TP
.B MPI_ERR_BUFFER 
- Invalid buffer pointer.  Usually a null buffer where
one is not valid.
.PD 1
.PD 0
.TP
.B MPI_ERR_COUNT 
- Invalid count argument.  Count arguments must be 
non-negative; a count of zero is often valid.
.PD 1
.PD 0
.TP
.B MPI_ERR_TYPE 
- Invalid datatype argument.  May be an uncommitted 
MPI_Datatype (see 
.I MPI_Type_commit
).
.PD 1
.SH LOCATION
allgatherv.c
