.TH MPI_Type_vector 3 "8/30/1999" " " "MPI"
.SH NAME
MPI_Type_vector \-  Creates a vector (strided) datatype 
.SH SYNOPSIS
.nf
#include "mpi.h"
int MPI_Type_vector( 
 int count, 
 int blocklen, 
 int stride, 
 MPI_Datatype old_type, 
 MPI_Datatype *newtype )
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B count 
- number of blocks (nonnegative integer) 
.PD 1
.PD 0
.TP
.B blocklength 
- number of elements in each block 
(nonnegative integer) 
.PD 1
.PD 0
.TP
.B stride 
- number of elements between start of each block (integer) 
.PD 1
.PD 0
.TP
.B oldtype 
- old datatype (handle) 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B newtype 
- new datatype (handle) 
.PD 1

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.
.SH LOCATION
type_vec.c
