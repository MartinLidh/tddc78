.TH MPE_Open_graphics 4 "5/15/1999" " " "MPE"
.SH NAME
MPE_Open_graphics \-  (collectively) opens an X Windows display 
.SH SYNOPSIS
.nf
#include <stdio.h>
#include "mpe.h"
int MPE_Open_graphics( handle, comm, display, x, y, w, h, is_collective )
MPE_XGraph *handle;
MPI_Comm   comm;
char       display[MPI_MAX_PROCESSOR_NAME+4];
int        x, y;
int        w, h;
int        is_collective;
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B comm 
- Communicator of participating processes
.PD 1
.PD 0
.TP
.B display 
- Name of X window display.  If null, display will be taken from
the DISPLAY variable on the process with rank 0 in 
.I comm
.  If that is
either undefined, or starts with w ":", then the value of display is
`hostname`:0
.PD 1
.PD 0
.TP
.B x,y 
- position of the window.  If 
.I (-1,-1)
, then the user should be
asked to position the window (this is a window manager issue).
.PD 1
.PD 0
.TP
.B w,h 
- width and height of the window, in pixels.
.PD 1
.PD 0
.TP
.B is_collective 
- true if the graphics operations are collective; this
allows the MPE graphics operations to make fewer connections to the 
display.  If false, then all processes in the communicator comm will 
open the display; this could exceed the number of connections that your
X window server allows.  Not yet implemented.
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B handle 
- Graphics handle to be given to other MPE graphics routines.
.PD 1

.SH NOTES
This is a collective routine.  All processes in the given communicator
must call it, and it has the same semantics as 
.I MPI_Barrier
(that is,
other collective operations can not cross this routine).
.SH LOCATION
mpe_graphics.c
